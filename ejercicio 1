import pandas as pd
from sklearn.cluster import KMeans
from sklearn.preprocessing import StandardScaler
import matplotlib.pyplot as plt

data = {
    'ClienteID': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],
    'Edad': [25, 45, 35, 23, 50, 31, 42, 36, 29, 40],
    'IngresoMensual': [2500, 4000, 3200, 2200, 5000, 3100, 4200, 3500, 3000, 3700],
    'FrecuenciaCompra': [10, 4, 7, 12, 3, 9, 5, 6, 8, 7]
}
df = pd.DataFrame(data)
print("Dataset original:\n", df)

scaler = StandardScaler()
scaled_data = scaler.fit_transform(df[['Edad', 'IngresoMensual', 'FrecuenciaCompra']])

kmeans = KMeans(n_clusters=3, random_state=42, n_init = 'auto') #n_init explicitly set to 'auto'
df['Segmento'] = kmeans.fit_predict(scaled_data)

plt.scatter(df['IngresoMensual'], df['FrecuenciaCompra'], c=df['Segmento'], cmap='viridis')
plt.xlabel('Ingreso Mensual')
plt.ylabel('Frecuencia de Compra')
plt.title('Segmentaci√≥n de Clientes')
plt.colorbar(label='Segmento')
plt.show()

print("\nDataset con segmentos:\n", df)